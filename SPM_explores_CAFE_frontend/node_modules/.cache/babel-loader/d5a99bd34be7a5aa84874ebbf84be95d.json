{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction EmployeeAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [employeeList, setEmployeeList] = useState([]);\n  const [callback] = useState(false);\n\n  const getEmployeesInformations = async () => {\n    const res = await axios.get('/emp/getEmployee'); //setUsersList(res.data)\n\n    setEmployeeList(res.data);\n  };\n\n  useEffect(() => {\n    getEmployeesInformations();\n  }, [callback]);\n  useEffect(() => {\n    if (token) {\n      const getEmployee = async () => {\n        try {\n          const res = await axios.get('/emp/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n        } catch (err) {\n          alert(err.responce.data.msg);\n        }\n      };\n\n      getEmployee();\n    }\n  }, [token]);\n  return {\n    isLogged: [isLogged, setIsLogged],\n    employeeList: [employeeList, setEmployeeList]\n  };\n}\n\n_s(EmployeeAPI, \"K140CvpcA6KoV/HrWBqIggSzyTc=\");\n\n_c = EmployeeAPI;\nexport default EmployeeAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeAPI\");","map":{"version":3,"sources":["W:/NEW SPM FRONT END/Explorers_SPM_FRONTEND/SPM_explores_CAFE_frontend/src/api/managerAPI/EmployeeAPI.js"],"names":["useState","useEffect","axios","EmployeeAPI","token","isLogged","setIsLogged","employeeList","setEmployeeList","callback","getEmployeesInformations","res","get","data","getEmployee","headers","Authorization","err","alert","responce","msg"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AACxB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACS,QAAD,IAAaT,QAAQ,CAAC,KAAD,CAA3B;;AAGA,QAAMU,wBAAwB,GAAG,YAAY;AACzC,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,kBAAV,CAAlB,CADyC,CAEzC;;AACAJ,IAAAA,eAAe,CAACG,GAAG,CAACE,IAAL,CAAf;AACH,GAJD;;AAKAZ,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,wBAAwB;AAC3B,GAFQ,EAEL,CAACD,QAAD,CAFK,CAAT;AAIAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGG,KAAH,EAAS;AACL,YAAMU,WAAW,GAAG,YAAY;AAC5B,YAAI;AACA,gBAAMH,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAU,YAAV,EAAwB;AACtCG,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAEZ;AAAhB;AAD6B,WAAxB,CAAlB;AAIAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACH,SAND,CAME,OAAOW,GAAP,EAAY;AACVC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaN,IAAb,CAAkBO,GAAnB,CAAL;AACH;AACJ,OAVD;;AAWAN,MAAAA,WAAW;AACd;AACJ,GAfQ,EAeN,CAACV,KAAD,CAfM,CAAT;AAiBA,SAAO;AACHC,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADP;AAEHC,IAAAA,YAAY,EAAE,CAACA,YAAD,EAAeC,eAAf;AAFX,GAAP;AAIH;;GApCQL,W;;KAAAA,W;AAsCT,eAAeA,WAAf","sourcesContent":["import {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction EmployeeAPI(token) {\r\n    const [isLogged, setIsLogged] = useState(false)\r\n    const [employeeList, setEmployeeList] = useState([])\r\n    const [callback] = useState(false)\r\n    \r\n\r\n    const getEmployeesInformations = async () => {\r\n        const res = await axios.get('/emp/getEmployee')\r\n        //setUsersList(res.data)\r\n        setEmployeeList(res.data)\r\n    }\r\n    useEffect(() => {\r\n        getEmployeesInformations()\r\n    },  [callback])\r\n\r\n    useEffect(() => {\r\n        if(token){\r\n            const getEmployee = async () => {\r\n                try {\r\n                    const res = await axios.get('/emp/infor', {\r\n                        headers: {Authorization: token}\r\n                    })\r\n\r\n                    setIsLogged(true)\r\n                } catch (err) {\r\n                    alert(err.responce.data.msg)\r\n                }\r\n            }\r\n            getEmployee()\r\n        }\r\n    }, [token])\r\n\r\n    return {\r\n        isLogged: [isLogged, setIsLogged],\r\n        employeeList: [employeeList, setEmployeeList]\r\n    }\r\n}\r\n\r\nexport default EmployeeAPI\r\n"]},"metadata":{},"sourceType":"module"}